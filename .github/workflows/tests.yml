name: Run Tests

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [ master, main ]
    pull_request:
        branches: [ master, main ]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    run-tests:
        name: php-${{ matrix.php_version }}-sylius-${{ matrix.sylius_version }}-symfony-${{ matrix.symfony_version }}
        # The type of runner that the job will run on
        runs-on: ubuntu-22.04

        strategy:
            fail-fast: false
            matrix:
                sylius_version: ["2.0"]
                symfony_version: ["6.4", "7.1"]
                php_version: ["8.2", "8.3"]

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Build PHP service with specific version
                run: docker compose build --build-arg PHP_VERSION=${{ matrix.php_version }} php

            -   name: Start services
                run: docker compose up --detach --wait

            -   name: Update Composer
                run: docker compose exec --no-TTY php composer self-update

            -   name: Install Sylius version
                run: docker compose exec --no-TTY php composer require "sylius/sylius:${{ matrix.sylius_version }}.*" --no-interaction --no-update --no-scripts

            -   name: Install Symfony version
                run: docker compose exec --no-TTY php bash -c '
                    grep -o -E "\"(symfony/[^\"]+)\"" composer.json |
                    grep -v -E "(symfony/flex|symfony/webpack-encore-bundle|symfony/debug-bundle|symfony/web-profiler-bundle|symfony/panther)" |
                    xargs printf "%s:${{ matrix.symfony_version }}.* " |
                    xargs composer require --no-interaction --no-update
                    '

            -   name: Wait for database
                run: docker compose exec --no-TTY php timeout 60s sh -c 'while ! nc -z mysql 3306; do sleep 0.1; done'

            -   name: Install dependencies (prefer-dist)
                run: |
                    docker compose exec --no-TTY php rm -fr vendor composer.lock
                    docker compose exec --no-TTY php composer update --no-interaction --prefer-dist
                    docker compose exec --no-TTY php bash -c 'vendor/bin/bdi detect drivers'
                    docker compose exec --no-TTY php bash -c '
                        cd tests/Application &&
                        bin/console doctrine:database:create --if-not-exists --env=test -vvv &&
                        bin/console doctrine:schema:update --complete --force --env=test -vvv &&
                        bin/console cache:clear --env=test -vvv &&
                        bin/console assets:install --env=test -vvv &&
                        yarn install &&
                        yarn build
                        '

            -   name: Create weirdly required manifest.json file
                run: docker compose exec --no-TTY php bash -c 'echo "{}" > tests/Application/public/build/manifest.json'

            -   name: PHPStan
                run: docker compose exec --no-TTY php bash -c 'APP_ENV=test bin/phpstan.sh'

            -   name: ECS
                run: docker compose exec --no-TTY php bash -c 'APP_ENV=test bin/ecs.sh --clear-cache'

            -   name: Symfony lint
                run: docker compose exec --no-TTY php bash -c 'APP_ENV=test bin/symfony-lint.sh'

            -   name: Behat tests
                run: docker compose exec --no-TTY php bash -c 'bin/behat.sh -vvv'

            -   name: Upload prefer-dist composer.lock artifacts
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: composer--prefer-dist-locks-php${{ matrix.php_version }}-sylius${{ matrix.sylius_version }}-symfony${{ matrix.symfony_version }}
                    path: composer.lock

            -   name: Upload prefer-dist logs artifacts
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: composer--prefer-dist-logs-php${{ matrix.php_version }}-sylius${{ matrix.sylius_version }}-symfony${{ matrix.symfony_version }}
                    path: tests/Application/var/log/*

            -   name: Test with prefer-lowest dependencies
                run: |
                    docker compose exec --no-TTY php rm -fr vendor composer.lock
                    docker compose exec --no-TTY php composer update --no-interaction --prefer-lowest --no-plugins
                    docker compose exec --no-TTY php bash -c 'vendor/bin/bdi detect drivers'
                    docker compose exec --no-TTY php bash -c '
                        cd tests/Application &&
                        bin/console doctrine:database:create --if-not-exists --env=test -vvv &&
                        bin/console doctrine:schema:update --complete --force --env=test -vvv &&
                        bin/console cache:clear --env=test -vvv &&
                        bin/console assets:install --env=test -vvv &&
                        yarn install &&
                        yarn build
                        '

            -   name: Create weirdly required manifest.json file
                run: docker compose exec --no-TTY php bash -c 'echo "{}" > tests/Application/public/build/manifest.json'

            -   name: ECS
                run: docker compose exec --no-TTY php bash -c 'APP_ENV=test bin/ecs.sh --clear-cache'

            -   name: Symfony lint
                run: docker compose exec --no-TTY php bash -c 'APP_ENV=test bin/symfony-lint.sh'

            -   name: Behat tests
                run: docker compose exec --no-TTY php bash -c 'APP_ENV=test bin/behat.sh -vvv'

            -   name: Upload prefer-lowest composer.lock artifacts
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: composer-prefer-lowest-locks-php${{ matrix.php_version }}-sylius${{ matrix.sylius_version }}-symfony${{ matrix.symfony_version }}
                    path: composer.lock

            -   name: Upload prefer-lowest logs artifacts
                uses: actions/upload-artifact@v4
                if: always()
                with:
                    name: composer-prefer-lowest-logs-php${{ matrix.php_version }}-sylius${{ matrix.sylius_version }}-symfony${{ matrix.symfony_version }}
                    path: tests/Application/var/log/*

            -   name: Stop services
                if: always()
                run: docker compose down
