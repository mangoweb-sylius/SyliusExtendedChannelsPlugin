version: 2.1

workflows:
    sylius1.11-php8.0+:
        jobs:
            -   build:
                    name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
                    matrix:
                        parameters:
                            php_version:
                                - "8.0"
                                - "8.1"
                                - "8.2"
                                - "8.3"
                            sylius_version:
                                - "1.11"
                            symfony_version:
                                - "5.4"
jobs:
    build:
        parameters:
            sylius_version:
                type: string
            symfony_version:
                type: string
            php_version:
                type: string
        docker:
            -   image: webdevops/php-nginx:<< parameters.php_version >>
                environment:
                    - DATABASE_URL=mysql://root:pass_root@127.0.0.1:3306/3brs_sylius_payment_fee_plugin_%kernel.environment%?serverVersion=8.0
            -   image: cimg/mysql:8.0
                environment:
                    MYSQL_ROOT_PASSWORD: pass_root
                    MYSQL_USER: sylius
                    MYSQL_PASSWORD: pass

        steps:
            - checkout
            # to avoid installing different package "Note, selecting 'cmdtest' instead of 'yarn'"
            -   run: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            -   run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            -   run: curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
            -   run: apt-get update
                # netcat to get 'nc' command for waiting for database
            -   run: apt-get install -y nodejs yarn mariadb-client netcat-openbsd
            -   run: composer self-update

            # Sylius & Symfony in current matrix versions
            -   run: composer require "sylius/sylius:<< parameters.sylius_version >>.*" --no-interaction --no-update --no-scripts
            -   run: grep -o -E '"(symfony/[^"]+)"' composer.json | grep -v -E '(symfony/flex|symfony/webpack-encore-bundle)' | xargs printf '%s:<< parameters.symfony_version >>.* '| xargs composer require --no-interaction --no-update

            -   run:
                    name: Wait for database
                    command: timeout 60s bash -c -- 'while ! nc -z 127.0.0.1 3306; do sleep 0.1; done' \
                        && timeout 30s bash -c -- 'mysql --user=sylius --password=pass --host=127.0.0.1 --port=3306 -e "exit"'

            # COMPOSER PREFER LOWEST (oldest possible) #
            # has to delete vendor for next test with different libraries version to avoid Composer error 'Failed to extract...' if vendor dir cache does not exist
            -   run: rm -fr vendor composer.lock
            -   run: composer update --no-interaction --prefer-lowest --no-plugins
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   run: (cd tests/Application && bin/console doctrine:database:create --if-not-exists --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:schema:update --force --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: APP_ENV=test bin/phpstan.sh
            -   run: APP_ENV=test bin/ecs.sh --clear-cache
            -   run: APP_ENV=test bin/symfony-lint.sh
            -   run: APP_ENV=test bin/behat.sh || grep 'console.CRITICAL' tests/Application/var/log/test.log

            # COMPOSER PREFER DIST #
            -   run: composer update --no-interaction --prefer-dist --no-plugins
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   run: (cd tests/Application && bin/console doctrine:database:create --if-not-exists --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:schema:update --force --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: APP_ENV=test bin/phpstan.sh
            -   run: APP_ENV=test bin/ecs.sh --clear-cache
            -   run: APP_ENV=test bin/symfony-lint.sh
            -   run: APP_ENV=test bin/behat.sh
